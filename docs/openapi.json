{
  "openapi": "3.1.0",
  "info": {
    "title": "Artist Booking API",
    "description": "API for managing artist bookings, payments, and notifications.",
    "contact": {
      "name": "Artist Booking Support",
      "email": "support@example.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-mfa": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Verify Mfa",
        "operationId": "verify_mfa_auth_verify_mfa_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/setup-mfa": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Setup Mfa",
        "operationId": "setup_mfa_auth_setup_mfa_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/confirm-mfa": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Confirm Mfa",
        "operationId": "confirm_mfa_auth_confirm_mfa_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFACode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/recovery-codes": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Generate Recovery Codes",
        "operationId": "generate_recovery_codes_auth_recovery_codes_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/disable-mfa": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Disable Mfa",
        "operationId": "disable_mfa_auth_disable_mfa_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFACode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/confirm-email": {
      "post": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Confirm Email",
        "operationId": "confirm_email_auth_confirm_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "auth",
          "auth"
        ],
        "summary": "Read Current User",
        "description": "Return details for the authenticated user.",
        "operationId": "read_current_user_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/google/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Google Login",
        "description": "Start Google OAuth flow.",
        "operationId": "google_login_auth_google_login_get",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "http://localhost:3000/dashboard",
              "title": "Next"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Google Callback",
        "operationId": "google_callback_auth_google_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/github/login": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Github Login",
        "description": "Start GitHub OAuth flow.",
        "operationId": "github_login_auth_github_login_get",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "http://localhost:3000/dashboard",
              "title": "Next"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Github Callback",
        "operationId": "github_callback_auth_github_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/artist-profiles/me": {
      "get": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Read Current Artist Profile",
        "description": "GET /api/v1/artist-profiles/me\nReturns the profile of the currently authenticated artist.",
        "operationId": "read_current_artist_profile_api_v1_artist_profiles_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Update current artist's profile",
        "description": "Update fields of the currently authenticated artist's profile.",
        "operationId": "update_current_artist_profile_api_v1_artist_profiles_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistProfileUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/artist-profiles/me/profile-picture": {
      "post": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Upload or update current artist's profile picture",
        "description": "Uploads a new profile picture for the currently authenticated artist, replacing any existing one.",
        "operationId": "upload_artist_profile_picture_me_api_v1_artist_profiles_me_profile_picture_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_artist_profile_picture_me_api_v1_artist_profiles_me_profile_picture_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/artist-profiles/me/cover-photo": {
      "post": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Upload or update current artist's cover photo",
        "description": "Uploads a new cover photo for the currently authenticated artist, replacing any existing one.",
        "operationId": "upload_artist_cover_photo_me_api_v1_artist_profiles_me_cover_photo_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_artist_cover_photo_me_api_v1_artist_profiles_me_cover_photo_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/artist-profiles/me/portfolio-images": {
      "put": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Update portfolio image order",
        "description": "Replace portfolio_image_urls with the provided list to reorder images.",
        "operationId": "update_portfolio_images_order_me_api_v1_artist_profiles_me_portfolio_images_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortfolioImagesUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Upload portfolio images",
        "description": "Upload one or more portfolio images and append them to the artist's portfolio_image_urls list.",
        "operationId": "upload_artist_portfolio_images_me_api_v1_artist_profiles_me_portfolio_images_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_artist_portfolio_images_me_api_v1_artist_profiles_me_portfolio_images_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/artist-profiles/": {
      "get": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "List all artist profiles",
        "description": "Return a paginated list of artist profiles.",
        "operationId": "read_all_artist_profiles_api_v1_artist_profiles__get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ServiceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(top_rated|most_booked|newest)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort"
            }
          },
          {
            "name": "when",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "When"
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Minprice"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Maxprice"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "include_price_distribution",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Price Distribution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/artist-profiles/{artist_id}": {
      "get": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Read Artist Profile By Id",
        "operationId": "read_artist_profile_by_id_api_v1_artist_profiles__artist_id__get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistProfileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/artist-profiles/{artist_id}/availability": {
      "get": {
        "tags": [
          "artist-profiles"
        ],
        "summary": "Read Artist Availability",
        "description": "Return dates the artist is unavailable.",
        "operationId": "read_artist_availability_api_v1_artist_profiles__artist_id__availability_get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          },
          {
            "name": "when",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "When"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistAvailabilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/": {
      "get": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "List Services",
        "description": "List all services with artist info.",
        "operationId": "list_services_api_v1_services__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  },
                  "type": "array",
                  "title": "Response List Services Api V1 Services  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "Create Service",
        "description": "Create a new service for the currently authenticated artist.\nFull path \u2192 POST /api/v1/services/",
        "operationId": "create_service_api_v1_services__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/services/{service_id}": {
      "put": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "Update Service",
        "description": "Update a service owned by the currently authenticated artist.\nFull path \u2192 PUT /api/v1/services/{service_id}",
        "operationId": "update_service_api_v1_services__service_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "Read Service",
        "description": "Get a specific service by its ID (publicly accessible).\nFull path \u2192 GET /api/v1/services/{service_id}",
        "operationId": "read_service_api_v1_services__service_id__get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "Delete Service",
        "description": "Delete a service owned by the currently authenticated artist.\nFull path \u2192 DELETE /api/v1/services/{service_id}",
        "operationId": "delete_service_api_v1_services__service_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services/artist/{artist_user_id}": {
      "get": {
        "tags": [
          "services",
          "Services"
        ],
        "summary": "Read Services By Artist",
        "description": "Get all services offered by a specific artist (by their user_id).\nFull path \u2192 GET /api/v1/services/artist/{artist_user_id}",
        "operationId": "read_services_by_artist_api_v1_services_artist__artist_user_id__get",
        "parameters": [
          {
            "name": "artist_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  },
                  "title": "Response Read Services By Artist Api V1 Services Artist  Artist User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/": {
      "post": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Create Booking",
        "description": "Create a new booking.  Only authenticated clients may book services from artists.",
        "operationId": "create_booking_api_v1_bookings__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/my-bookings": {
      "get": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Read My Bookings",
        "description": "Return bookings for the authenticated client, optionally filtered.",
        "operationId": "read_my_bookings_api_v1_bookings_my_bookings_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status or 'upcoming'/'past'",
              "examples": {
                "upcoming": {
                  "summary": "Upcoming",
                  "value": "upcoming"
                },
                "past": {
                  "summary": "Past",
                  "value": "past"
                }
              },
              "title": "Status"
            },
            "description": "Filter by status or 'upcoming'/'past'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingResponse"
                  },
                  "title": "Response Read My Bookings Api V1 Bookings My Bookings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/artist-bookings": {
      "get": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Read Artist Bookings",
        "description": "Return all bookings for the currently authenticated artist.",
        "operationId": "read_artist_bookings_api_v1_bookings_artist_bookings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BookingResponse"
                  },
                  "type": "array",
                  "title": "Response Read Artist Bookings Api V1 Bookings Artist Bookings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/bookings/{booking_id}/status": {
      "patch": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Update Booking Status",
        "description": "Update the status of a booking.  Only the artist who owns that booking may call this.",
        "operationId": "update_booking_status_api_v1_bookings__booking_id__status_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "get": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Read Booking Details",
        "description": "Return the details of a single booking.  \nAccessible if the current user is either the booking\u2019s client or the booking\u2019s artist.",
        "operationId": "read_booking_details_api_v1_bookings__booking_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/calendar.ics": {
      "get": {
        "tags": [
          "bookings",
          "bookings"
        ],
        "summary": "Download Booking Calendar",
        "description": "Return an ICS file for a confirmed booking.",
        "operationId": "download_booking_calendar_api_v1_bookings__booking_id__calendar_ics_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Download Booking Calendar Api V1 Bookings  Booking Id  Calendar Ics Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/bookings/{booking_id}/reviews": {
      "post": {
        "tags": [
          "reviews",
          "Reviews"
        ],
        "summary": "Create Review For Booking",
        "description": "Create a review for a specific booking.\nOnly the client who made the booking can review it, and only if it's completed.",
        "operationId": "create_review_for_booking_api_v1_reviews_bookings__booking_id__reviews_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "The ID of the booking to review"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/reviews/{booking_id}": {
      "get": {
        "tags": [
          "reviews",
          "Reviews"
        ],
        "summary": "Get Review",
        "description": "Get a specific review by its ID (which is the booking_id).",
        "operationId": "get_review_api_v1_reviews_reviews__booking_id__get",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/artist-profiles/{artist_id}/reviews": {
      "get": {
        "tags": [
          "reviews",
          "Reviews"
        ],
        "summary": "List Reviews For Artist",
        "description": "List all reviews for a specific artist.\nThis requires joining through Bookings and Services or directly if Review had artist_id.\nFor now, let's assume reviews are primarily linked to bookings.",
        "operationId": "list_reviews_for_artist_api_v1_reviews_artist_profiles__artist_id__reviews_get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDetails"
                  },
                  "title": "Response List Reviews For Artist Api V1 Reviews Artist Profiles  Artist Id  Reviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reviews/services/{service_id}/reviews": {
      "get": {
        "tags": [
          "reviews",
          "Reviews"
        ],
        "summary": "List Reviews For Service",
        "description": "List all reviews for a specific service.",
        "operationId": "list_reviews_for_service_api_v1_reviews_services__service_id__reviews_get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDetails"
                  },
                  "title": "Response List Reviews For Service Api V1 Reviews Services  Service Id  Reviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/attachments": {
      "post": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Upload Booking Attachment",
        "description": "Upload a temporary attachment prior to creating a booking request.",
        "operationId": "upload_booking_attachment_api_v1_booking_requests_attachments_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_booking_attachment_api_v1_booking_requests_attachments_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/": {
      "post": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Create Booking Request",
        "description": "Create a new booking request.\nA client makes a request to an artist.",
        "operationId": "create_booking_request_api_v1_booking_requests__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/booking-requests/me/client": {
      "get": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Read My Client Booking Requests",
        "description": "Retrieve booking requests made by the current client.",
        "operationId": "read_my_client_booking_requests_api_v1_booking_requests_me_client_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingRequestResponse"
                  },
                  "title": "Response Read My Client Booking Requests Api V1 Booking Requests Me Client Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/me/artist": {
      "get": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Read My Artist Booking Requests",
        "description": "Retrieve booking requests made to the current artist.",
        "operationId": "read_my_artist_booking_requests_api_v1_booking_requests_me_artist_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingRequestResponse"
                  },
                  "title": "Response Read My Artist Booking Requests Api V1 Booking Requests Me Artist Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}": {
      "get": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Read Booking Request",
        "description": "Retrieve a specific booking request by its ID.\nAccessible by the client who made it or the artist it was made to.",
        "operationId": "read_booking_request_api_v1_booking_requests__request_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}/client": {
      "put": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Update Booking Request By Client",
        "description": "Update a booking request (e.g., message, proposed times) or withdraw it.\nOnly accessible by the client who created the request.",
        "operationId": "update_booking_request_by_client_api_v1_booking_requests__request_id__client_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestUpdateByClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}/artist": {
      "put": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Update Booking Request By Artist",
        "description": "Update a booking request status (e.g., decline it).\nOnly accessible by the artist to whom the request was made.",
        "operationId": "update_booking_request_by_artist_api_v1_booking_requests__request_id__artist_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingRequestUpdateByArtist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/stats": {
      "get": {
        "tags": [
          "booking-requests",
          "Booking Requests"
        ],
        "summary": "Get dashboard stats",
        "description": "Return monthly inquiries, profile views, and response rate for the artist.",
        "operationId": "get_dashboard_stats_api_v1_booking_requests_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/quotes": {
      "post": {
        "tags": [
          "quotes-v2",
          "QuotesV2"
        ],
        "summary": "Create Quote",
        "operationId": "create_quote_api_v1_quotes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__quote_v2__QuoteCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}": {
      "get": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Read Quote",
        "description": "Retrieve a specific quote by ID.\nAccessible by the client of the booking request or the artist who made the quote.",
        "operationId": "read_quote_api_v1_quotes__quote_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/accept": {
      "post": {
        "tags": [
          "quotes-v2",
          "QuotesV2"
        ],
        "summary": "Accept Quote",
        "operationId": "accept_quote_api_v1_quotes__quote_id__accept_post",
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingSimpleRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}/quotes": {
      "post": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Create Quote For Request",
        "description": "Create a new quote for a specific booking request.\nOnly the artist to whom the request was made can create a quote.\nThe `quote_in` schema's `booking_request_id` must match `request_id` from path.",
        "operationId": "create_quote_for_request_api_v1_booking_requests__request_id__quotes_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__request_quote__QuoteCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Read Quotes For Booking Request",
        "description": "Retrieve all quotes associated with a specific booking request.\nAccessible by the client who made the request or the artist it was made to.",
        "operationId": "read_quotes_for_booking_request_api_v1_booking_requests__request_id__quotes_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteResponse"
                  },
                  "title": "Response Read Quotes For Booking Request Api V1 Booking Requests  Request Id  Quotes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/me/artist": {
      "get": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Read My Artist Quotes",
        "description": "Retrieve all quotes made by the current artist.",
        "operationId": "read_my_artist_quotes_api_v1_quotes_me_artist_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteResponse"
                  },
                  "title": "Response Read My Artist Quotes Api V1 Quotes Me Artist Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/client": {
      "put": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Update Quote By Client",
        "description": "Update a quote's status (accept or reject).\nOnly accessible by the client to whom the quote was offered (via booking request).",
        "operationId": "update_quote_by_client_api_v1_quotes__quote_id__client_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteUpdateByClient"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/artist": {
      "put": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Update Quote By Artist",
        "description": "Update quote details or withdraw a quote.\nOnly accessible by the artist who created the quote.",
        "operationId": "update_quote_by_artist_api_v1_quotes__quote_id__artist_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteUpdateByArtist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/confirm-booking": {
      "post": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Confirm Quote And Create Booking",
        "description": "Artist confirms a client-accepted quote, which creates a formal Booking.",
        "operationId": "confirm_quote_and_create_booking_api_v1_quotes__quote_id__confirm_booking_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/{quote_id}/pdf": {
      "get": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Get Quote Pdf",
        "operationId": "get_quote_pdf_api_v1_quotes__quote_id__pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "quote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quote Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quotes/calculate": {
      "post": {
        "tags": [
          "quotes",
          "Quotes"
        ],
        "summary": "Calculate Quote Endpoint",
        "description": "Return a quick quote estimation used during booking flow.",
        "operationId": "calculate_quote_endpoint_api_v1_quotes_calculate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCalculationParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteCalculationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quote-templates": {
      "post": {
        "tags": [
          "quote-templates"
        ],
        "summary": "Create Quote Template",
        "operationId": "create_quote_template_api_v1_quote_templates_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteTemplateCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteTemplateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quote-templates/artist/{artist_id}": {
      "get": {
        "tags": [
          "quote-templates"
        ],
        "summary": "List Templates",
        "operationId": "list_templates_api_v1_quote_templates_artist__artist_id__get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuoteTemplateRead"
                  },
                  "title": "Response List Templates Api V1 Quote Templates Artist  Artist Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/quote-templates/{template_id}": {
      "get": {
        "tags": [
          "quote-templates"
        ],
        "summary": "Read Template",
        "operationId": "read_template_api_v1_quote_templates__template_id__get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteTemplateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "quote-templates"
        ],
        "summary": "Update Template",
        "operationId": "update_template_api_v1_quote_templates__template_id__put",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteTemplateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteTemplateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quote-templates"
        ],
        "summary": "Delete Template",
        "operationId": "delete_template_api_v1_quote_templates__template_id__delete",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Template Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteTemplateRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}/messages": {
      "get": {
        "tags": [
          "messages",
          "messages"
        ],
        "summary": "Read Messages",
        "operationId": "read_messages_api_v1_booking_requests__request_id__messages_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponse"
                  },
                  "title": "Response Read Messages Api V1 Booking Requests  Request Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "messages",
          "messages"
        ],
        "summary": "Create Message",
        "operationId": "create_message_api_v1_booking_requests__request_id__messages_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/booking-requests/{request_id}/attachments": {
      "post": {
        "tags": [
          "messages",
          "messages"
        ],
        "summary": "Upload Attachment",
        "operationId": "upload_attachment_api_v1_booking_requests__request_id__attachments_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Request Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_attachment_api_v1_booking_requests__request_id__attachments_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications": {
      "get": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Read My Notifications",
        "description": "Retrieve notifications for the current user with pagination.",
        "operationId": "read_my_notifications_api_v1_notifications_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  },
                  "title": "Response Read My Notifications Api V1 Notifications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/{notification_id}/read": {
      "put": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Mark Notification Read",
        "description": "Mark a notification as read.",
        "operationId": "mark_notification_read_api_v1_notifications__notification_id__read_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/message-threads": {
      "get": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Read Message Threads",
        "description": "Retrieve unread message notifications grouped by chat thread.",
        "operationId": "read_message_threads_api_v1_notifications_message_threads_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ThreadNotificationResponse"
                  },
                  "type": "array",
                  "title": "Response Read Message Threads Api V1 Notifications Message Threads Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/message-threads/{booking_request_id}/read": {
      "put": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Mark Thread Read",
        "description": "Mark all message notifications for the thread as read.",
        "operationId": "mark_thread_read_api_v1_notifications_message_threads__booking_request_id__read_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "booking_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Booking Request Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/read-all": {
      "put": {
        "tags": [
          "notifications",
          "notifications"
        ],
        "summary": "Mark All Notifications Read",
        "description": "Mark all notifications as read for the current user.",
        "operationId": "mark_all_notifications_read_api_v1_notifications_read_all_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/sound-providers/": {
      "get": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "List Providers",
        "operationId": "list_providers_api_v1_sound_providers__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SoundProviderResponse"
                  },
                  "type": "array",
                  "title": "Response List Providers Api V1 Sound Providers  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "Create Provider",
        "operationId": "create_provider_api_v1_sound_providers__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoundProviderCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoundProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sound-providers/{provider_id}": {
      "put": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "Update Provider",
        "operationId": "update_provider_api_v1_sound_providers__provider_id__put",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoundProviderUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoundProviderResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "Delete Provider",
        "operationId": "delete_provider_api_v1_sound_providers__provider_id__delete",
        "parameters": [
          {
            "name": "provider_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Provider Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sound-providers/artist/{artist_id}": {
      "get": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "Get Artist Preferences",
        "operationId": "get_artist_preferences_api_v1_sound_providers_artist__artist_id__get",
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtistSoundPreferenceResponse"
                  },
                  "title": "Response Get Artist Preferences Api V1 Sound Providers Artist  Artist Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sound-providers",
          "sound-providers"
        ],
        "summary": "Add Artist Preference",
        "operationId": "add_artist_preference_api_v1_sound_providers_artist__artist_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "artist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Artist Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtistSoundPreferenceBase"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtistSoundPreferenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/google-calendar/status": {
      "get": {
        "tags": [
          "google-calendar",
          "google-calendar"
        ],
        "summary": "Google Calendar Status",
        "description": "Return whether the user has a connected Google Calendar.",
        "operationId": "google_calendar_status_api_v1_google_calendar_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/google-calendar/connect": {
      "get": {
        "tags": [
          "google-calendar",
          "google-calendar"
        ],
        "summary": "Connect Google Calendar",
        "operationId": "connect_google_calendar_api_v1_google_calendar_connect_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/google-calendar/callback": {
      "get": {
        "tags": [
          "google-calendar",
          "google-calendar"
        ],
        "summary": "Google Calendar Callback",
        "operationId": "google_calendar_callback_api_v1_google_calendar_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/google-calendar": {
      "delete": {
        "tags": [
          "google-calendar",
          "google-calendar"
        ],
        "summary": "Disconnect Google Calendar",
        "operationId": "disconnect_google_calendar_api_v1_google_calendar_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/": {
      "post": {
        "tags": [
          "payments",
          "payments"
        ],
        "summary": "Create Payment",
        "operationId": "create_payment_api_v1_payments__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/payments/{payment_id}/receipt": {
      "get": {
        "tags": [
          "payments",
          "payments"
        ],
        "summary": "Get Payment Receipt",
        "description": "Return the receipt PDF for the given payment id.",
        "operationId": "get_payment_receipt_api_v1_payments__payment_id__receipt_get",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}": {
      "get": {
        "tags": [
          "invoices",
          "invoices"
        ],
        "summary": "Read Invoice",
        "operationId": "read_invoice_api_v1_invoices__invoice_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}/mark-paid": {
      "post": {
        "tags": [
          "invoices",
          "invoices"
        ],
        "summary": "Mark Invoice Paid",
        "operationId": "mark_invoice_paid_api_v1_invoices__invoice_id__mark_paid_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceMarkPaid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{invoice_id}/pdf": {
      "get": {
        "tags": [
          "invoices",
          "invoices"
        ],
        "summary": "Get Invoice Pdf",
        "operationId": "get_invoice_pdf_api_v1_invoices__invoice_id__pdf_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Invoice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me/export": {
      "get": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Export Me",
        "description": "Return all user related data as JSON.",
        "operationId": "export_me_api_v1_users_me_export_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Export Me Api V1 Users Me Export Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me/profile-picture": {
      "post": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Upload or update current user's profile picture",
        "description": "Uploads a new profile picture for the currently authenticated user, replacing any existing one.",
        "operationId": "upload_profile_picture_me_api_v1_users_me_profile_picture_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_profile_picture_me_api_v1_users_me_profile_picture_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/me": {
      "delete": {
        "tags": [
          "users",
          "users"
        ],
        "summary": "Delete Me",
        "description": "Delete the current user's account after password confirmation.",
        "operationId": "delete_me_api_v1_users_me_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/settings": {
      "get": {
        "tags": [
          "settings",
          "settings"
        ],
        "summary": "Get Settings",
        "description": "Return selected public configuration values.",
        "operationId": "get_settings_api_v1_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/travel-forecast": {
      "get": {
        "tags": [
          "travel-forecast",
          "travel-forecast"
        ],
        "summary": "Travel Forecast",
        "description": "Return a 3-day weather forecast for the destination.",
        "operationId": "travel_forecast_api_v1_travel_forecast_get",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/flights/cheapest": {
      "get": {
        "tags": [
          "flights",
          "flights"
        ],
        "summary": "Cheapest Morning Flight",
        "description": "Return the cheapest morning flight price.",
        "operationId": "cheapest_morning_flight_api_v1_flights_cheapest_get",
        "parameters": [
          {
            "name": "departure",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "title": "Departure"
            }
          },
          {
            "name": "arrival",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "title": "Arrival"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/distance": {
      "get": {
        "tags": [
          "distance",
          "distance"
        ],
        "summary": "Get Distance",
        "description": "Proxy Google Distance Matrix API and return its JSON response.",
        "operationId": "get_distance_api_v1_distance_get",
        "parameters": [
          {
            "name": "from_location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "From Location"
            }
          },
          {
            "name": "to_location",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Location"
            }
          },
          {
            "name": "includeDuration",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Includeduration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArtistAvailabilityResponse": {
        "properties": {
          "unavailable_dates": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Unavailable Dates"
          }
        },
        "type": "object",
        "required": [
          "unavailable_dates"
        ],
        "title": "ArtistAvailabilityResponse"
      },
      "ArtistListResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ArtistProfileResponse"
            },
            "type": "array",
            "title": "Data"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "price_distribution": {
            "items": {
              "$ref": "#/components/schemas/PriceBucket"
            },
            "type": "array",
            "title": "Price Distribution"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "price_distribution"
        ],
        "title": "ArtistListResponse",
        "description": "Paginated artist list response."
      },
      "ArtistProfileNested": {
        "properties": {
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name"
          },
          "custom_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate"
          },
          "portfolio_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Urls"
          },
          "portfolio_image_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Image Urls"
          },
          "specialties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialties"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "cover_photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Photo Url"
          },
          "price_visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Visible",
            "default": true
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ArtistProfileNested"
      },
      "ArtistProfileResponse": {
        "properties": {
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name"
          },
          "custom_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate"
          },
          "portfolio_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Urls"
          },
          "portfolio_image_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Image Urls"
          },
          "specialties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialties"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "cover_photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Photo Url"
          },
          "price_visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Visible",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "rating_count": {
            "type": "integer",
            "title": "Rating Count",
            "default": 0
          },
          "is_available": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Available"
          },
          "service_price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Price"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "id"
        ],
        "title": "ArtistProfileResponse"
      },
      "ArtistProfileUpdate": {
        "properties": {
          "business_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Business Name"
          },
          "custom_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "hourly_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hourly Rate"
          },
          "portfolio_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Urls"
          },
          "portfolio_image_urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Image Urls"
          },
          "specialties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Specialties"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          },
          "cover_photo_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Photo Url"
          },
          "price_visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Visible",
            "default": true
          }
        },
        "type": "object",
        "title": "ArtistProfileUpdate"
      },
      "ArtistSoundPreferenceBase": {
        "properties": {
          "provider_id": {
            "type": "integer",
            "title": "Provider Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "provider_id"
        ],
        "title": "ArtistSoundPreferenceBase"
      },
      "ArtistSoundPreferenceResponse": {
        "properties": {
          "provider_id": {
            "type": "integer",
            "title": "Provider Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SoundProviderResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "provider_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ArtistSoundPreferenceResponse"
      },
      "Body_login_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_auth_login_post"
      },
      "Body_upload_artist_cover_photo_me_api_v1_artist_profiles_me_cover_photo_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_artist_cover_photo_me_api_v1_artist_profiles_me_cover_photo_post"
      },
      "Body_upload_artist_portfolio_images_me_api_v1_artist_profiles_me_portfolio_images_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_artist_portfolio_images_me_api_v1_artist_profiles_me_portfolio_images_post"
      },
      "Body_upload_artist_profile_picture_me_api_v1_artist_profiles_me_profile_picture_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_artist_profile_picture_me_api_v1_artist_profiles_me_profile_picture_post"
      },
      "Body_upload_attachment_api_v1_booking_requests__request_id__attachments_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_attachment_api_v1_booking_requests__request_id__attachments_post"
      },
      "Body_upload_booking_attachment_api_v1_booking_requests_attachments_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_booking_attachment_api_v1_booking_requests_attachments_post"
      },
      "Body_upload_profile_picture_me_api_v1_users_me_profile_picture_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_profile_picture_me_api_v1_users_me_profile_picture_post"
      },
      "BookingCreate": {
        "properties": {
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          }
        },
        "type": "object",
        "required": [
          "service_id",
          "start_time",
          "end_time",
          "artist_id"
        ],
        "title": "BookingCreate"
      },
      "BookingDetailsSummary": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "guests": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guests"
          },
          "venue_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Venue Type"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "timestamp"
        ],
        "title": "BookingDetailsSummary"
      },
      "BookingRequestCreate": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "attachment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Url"
          },
          "proposed_datetime_1": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 1"
          },
          "proposed_datetime_2": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 2"
          },
          "travel_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Mode"
          },
          "travel_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Cost"
          },
          "travel_breakdown": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Breakdown"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingRequestStatus"
              },
              {
                "type": "null"
              }
            ],
            "default": "pending_quote"
          }
        },
        "type": "object",
        "required": [
          "artist_id"
        ],
        "title": "BookingRequestCreate"
      },
      "BookingRequestResponse": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "attachment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Url"
          },
          "proposed_datetime_1": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 1"
          },
          "proposed_datetime_2": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 2"
          },
          "travel_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Mode"
          },
          "travel_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Cost"
          },
          "travel_breakdown": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Breakdown"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "status": {
            "$ref": "#/components/schemas/BookingRequestStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "artist": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "service": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "quotes": {
            "items": {
              "$ref": "#/components/schemas/QuoteResponse"
            },
            "type": "array",
            "title": "Quotes",
            "default": []
          },
          "accepted_quote_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Quote Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "client_id",
          "artist_id",
          "status",
          "created_at"
        ],
        "title": "BookingRequestResponse"
      },
      "BookingRequestStatus": {
        "type": "string",
        "enum": [
          "draft",
          "pending_quote",
          "quote_provided",
          "pending_artist_confirmation",
          "request_confirmed",
          "request_completed",
          "request_declined",
          "request_withdrawn",
          "quote_rejected"
        ],
        "title": "BookingRequestStatus"
      },
      "BookingRequestUpdateByArtist": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingRequestStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "BookingRequestUpdateByArtist"
      },
      "BookingRequestUpdateByClient": {
        "properties": {
          "service_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Id"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "attachment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Url"
          },
          "proposed_datetime_1": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 1"
          },
          "proposed_datetime_2": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proposed Datetime 2"
          },
          "travel_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Mode"
          },
          "travel_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Cost"
          },
          "travel_breakdown": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Breakdown"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingRequestStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "BookingRequestUpdateByClient"
      },
      "BookingResponse": {
        "properties": {
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "status": {
            "$ref": "#/components/schemas/BookingStatus"
          },
          "total_price": {
            "type": "string",
            "title": "Total Price"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "deposit_due_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit Due By"
          },
          "deposit_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit Amount"
          },
          "payment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Status"
          },
          "deposit_paid": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit Paid"
          },
          "booking_request_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Request Id"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "service": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "source_quote": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuoteResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "service_id",
          "start_time",
          "end_time",
          "id",
          "artist_id",
          "client_id",
          "status",
          "total_price",
          "created_at",
          "updated_at"
        ],
        "title": "BookingResponse"
      },
      "BookingSimpleRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "quote_id": {
            "type": "integer",
            "title": "Quote Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "confirmed": {
            "type": "boolean",
            "title": "Confirmed"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "payment_status": {
            "type": "string",
            "title": "Payment Status"
          },
          "payment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Id"
          },
          "deposit_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit Amount"
          },
          "deposit_due_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deposit Due By"
          },
          "deposit_paid": {
            "type": "boolean",
            "title": "Deposit Paid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "quote_id",
          "artist_id",
          "client_id",
          "confirmed",
          "payment_status",
          "deposit_paid",
          "created_at",
          "updated_at"
        ],
        "title": "BookingSimpleRead"
      },
      "BookingStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "completed",
          "cancelled"
        ],
        "title": "BookingStatus"
      },
      "BookingUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "BookingUpdate"
      },
      "DeleteMeRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "DeleteMeRequest"
      },
      "EmailConfirmRequest": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "EmailConfirmRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InvoiceMarkPaid": {
        "properties": {
          "payment_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "title": "InvoiceMarkPaid"
      },
      "InvoiceRead": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "quote_id": {
            "type": "integer",
            "title": "Quote Id"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "issue_date": {
            "type": "string",
            "format": "date",
            "title": "Issue Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "amount_due": {
            "type": "string",
            "title": "Amount Due"
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "payment_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Method"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "pdf_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdf Url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "quote_id",
          "booking_id",
          "artist_id",
          "client_id",
          "issue_date",
          "amount_due",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "InvoiceRead"
      },
      "InvoiceStatus": {
        "type": "string",
        "enum": [
          "unpaid",
          "partial",
          "paid",
          "overdue"
        ],
        "title": "InvoiceStatus"
      },
      "MFACode": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "MFACode"
      },
      "MFAVerify": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "token",
          "code"
        ],
        "title": "MFAVerify"
      },
      "MessageCreate": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType",
            "default": "text"
          },
          "quote_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quote Id"
          },
          "attachment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Url"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "MessageCreate"
      },
      "MessageResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "sender_id": {
            "type": "integer",
            "title": "Sender Id"
          },
          "sender_type": {
            "$ref": "#/components/schemas/SenderType"
          },
          "message_type": {
            "$ref": "#/components/schemas/MessageType"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "quote_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quote Id"
          },
          "attachment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachment Url"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "booking_request_id",
          "sender_id",
          "sender_type",
          "message_type",
          "content",
          "timestamp"
        ],
        "title": "MessageResponse"
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "text",
          "quote",
          "system"
        ],
        "title": "MessageType"
      },
      "NotificationResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationType"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "sender_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Name"
          },
          "booking_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Type"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "type",
          "message",
          "link",
          "is_read",
          "timestamp"
        ],
        "title": "NotificationResponse"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "new_message",
          "new_booking_request",
          "booking_status_updated",
          "quote_accepted",
          "quote_expired",
          "quote_expiring",
          "new_booking",
          "deposit_due",
          "review_request"
        ],
        "title": "NotificationType"
      },
      "PaymentCreate": {
        "properties": {
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "full": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "booking_request_id"
        ],
        "title": "PaymentCreate"
      },
      "PortfolioImagesUpdate": {
        "properties": {
          "portfolio_image_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Portfolio Image Urls"
          }
        },
        "type": "object",
        "required": [
          "portfolio_image_urls"
        ],
        "title": "PortfolioImagesUpdate"
      },
      "PriceBucket": {
        "properties": {
          "min": {
            "type": "integer",
            "title": "Min"
          },
          "max": {
            "type": "integer",
            "title": "Max"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "min",
          "max",
          "count"
        ],
        "title": "PriceBucket",
        "description": "Histogram bucket for price range filtering."
      },
      "QuoteCalculationParams": {
        "properties": {
          "base_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Base Fee"
          },
          "distance_km": {
            "type": "number",
            "title": "Distance Km"
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id"
          },
          "accommodation_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation Cost"
          }
        },
        "type": "object",
        "required": [
          "base_fee",
          "distance_km"
        ],
        "title": "QuoteCalculationParams",
        "description": "Schema for the /quotes/calculate request body."
      },
      "QuoteCalculationResponse": {
        "properties": {
          "base_fee": {
            "type": "string",
            "title": "Base Fee"
          },
          "travel_cost": {
            "type": "string",
            "title": "Travel Cost"
          },
          "provider_cost": {
            "type": "string",
            "title": "Provider Cost"
          },
          "accommodation_cost": {
            "type": "string",
            "title": "Accommodation Cost"
          },
          "total": {
            "type": "string",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "base_fee",
          "travel_cost",
          "provider_cost",
          "accommodation_cost",
          "total"
        ],
        "title": "QuoteCalculationResponse",
        "description": "Schema for detailed quote calculations used by the quick quote API."
      },
      "QuoteRead": {
        "properties": {
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceItem-Output"
            },
            "type": "array",
            "title": "Services"
          },
          "sound_fee": {
            "type": "string",
            "title": "Sound Fee",
            "default": 0
          },
          "travel_fee": {
            "type": "string",
            "title": "Travel Fee",
            "default": 0
          },
          "accommodation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation"
          },
          "discount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "booking_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Id"
          },
          "subtotal": {
            "type": "string",
            "title": "Subtotal"
          },
          "total": {
            "type": "string",
            "title": "Total"
          },
          "status": {
            "$ref": "#/components/schemas/QuoteStatusV2"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "booking_request_id",
          "artist_id",
          "client_id",
          "services",
          "id",
          "subtotal",
          "total",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "QuoteRead"
      },
      "QuoteResponse": {
        "properties": {
          "quote_details": {
            "type": "string",
            "title": "Quote Details"
          },
          "price": {
            "type": "string",
            "title": "Price"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "ZAR"
          },
          "valid_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Until"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "status": {
            "$ref": "#/components/schemas/QuoteStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "artist": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "quote_details",
          "price",
          "id",
          "booking_request_id",
          "artist_id",
          "status",
          "created_at"
        ],
        "title": "QuoteResponse"
      },
      "QuoteStatus": {
        "type": "string",
        "enum": [
          "pending_client_action",
          "accepted_by_client",
          "rejected_by_client",
          "confirmed_by_artist",
          "withdrawn_by_artist",
          "expired"
        ],
        "title": "QuoteStatus"
      },
      "QuoteStatusV2": {
        "type": "string",
        "enum": [
          "pending",
          "accepted",
          "rejected",
          "expired"
        ],
        "title": "QuoteStatusV2"
      },
      "QuoteTemplateCreate": {
        "properties": {
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceItem-Input"
            },
            "type": "array",
            "title": "Services"
          },
          "sound_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Sound Fee",
            "default": 0
          },
          "travel_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Travel Fee",
            "default": 0
          },
          "accommodation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation"
          },
          "discount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          }
        },
        "type": "object",
        "required": [
          "artist_id",
          "name",
          "services"
        ],
        "title": "QuoteTemplateCreate"
      },
      "QuoteTemplateRead": {
        "properties": {
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceItem-Output"
            },
            "type": "array",
            "title": "Services"
          },
          "sound_fee": {
            "type": "string",
            "title": "Sound Fee",
            "default": 0
          },
          "travel_fee": {
            "type": "string",
            "title": "Travel Fee",
            "default": 0
          },
          "accommodation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation"
          },
          "discount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "artist_id",
          "name",
          "services",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "QuoteTemplateRead"
      },
      "QuoteTemplateUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "services": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ServiceItem-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Services"
          },
          "sound_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sound Fee"
          },
          "travel_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Fee"
          },
          "accommodation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation"
          },
          "discount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          }
        },
        "type": "object",
        "title": "QuoteTemplateUpdate"
      },
      "QuoteUpdateByArtist": {
        "properties": {
          "quote_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quote Details"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "valid_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Until"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QuoteStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "QuoteUpdateByArtist"
      },
      "QuoteUpdateByClient": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/QuoteStatus"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "QuoteUpdateByClient"
      },
      "ReviewCreate": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "rating"
        ],
        "title": "ReviewCreate"
      },
      "ReviewDetails": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "booking_id",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewDetails"
      },
      "ReviewResponse": {
        "properties": {
          "rating": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Rating"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "booking_id": {
            "type": "integer",
            "title": "Booking Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "rating",
          "booking_id",
          "created_at",
          "updated_at"
        ],
        "title": "ReviewResponse"
      },
      "SenderType": {
        "type": "string",
        "enum": [
          "client",
          "artist"
        ],
        "title": "SenderType"
      },
      "ServiceCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "duration_minutes": {
            "type": "integer",
            "title": "Duration Minutes"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "ZAR"
          },
          "display_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Order"
          },
          "service_type": {
            "$ref": "#/components/schemas/ServiceType"
          },
          "travel_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Rate"
          },
          "travel_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Members"
          }
        },
        "type": "object",
        "required": [
          "title",
          "duration_minutes",
          "price",
          "service_type"
        ],
        "title": "ServiceCreate"
      },
      "ServiceItem-Input": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "description",
          "price"
        ],
        "title": "ServiceItem"
      },
      "ServiceItem-Output": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "price": {
            "type": "string",
            "title": "Price"
          }
        },
        "type": "object",
        "required": [
          "description",
          "price"
        ],
        "title": "ServiceItem"
      },
      "ServiceResponse": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "price": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "ZAR"
          },
          "display_order": {
            "type": "integer",
            "title": "Display Order"
          },
          "service_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "travel_rate": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Rate"
          },
          "travel_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Members"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "artist": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ArtistProfileNested"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "display_order",
          "id",
          "artist_id",
          "created_at",
          "updated_at"
        ],
        "title": "ServiceResponse"
      },
      "ServiceType": {
        "type": "string",
        "enum": [
          "Live Performance",
          "Virtual Appearance",
          "Personalized Video",
          "Custom Song",
          "Other"
        ],
        "title": "ServiceType",
        "description": "Allowed service categories."
      },
      "ServiceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "default": "ZAR"
          },
          "display_order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Order"
          },
          "service_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ServiceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "travel_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Rate"
          },
          "travel_members": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Members"
          }
        },
        "type": "object",
        "title": "ServiceUpdate"
      },
      "SoundProviderCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "price_per_event": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Per Event"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "SoundProviderCreate"
      },
      "SoundProviderResponse": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "price_per_event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Per Event"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SoundProviderResponse"
      },
      "SoundProviderUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact Info"
          },
          "price_per_event": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Per Event"
          }
        },
        "type": "object",
        "title": "SoundProviderUpdate"
      },
      "ThreadNotificationResponse": {
        "properties": {
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "unread_count": {
            "type": "integer",
            "title": "Unread Count"
          },
          "last_message": {
            "type": "string",
            "title": "Last Message"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "booking_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BookingDetailsSummary"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "booking_request_id",
          "name",
          "unread_count",
          "last_message",
          "link",
          "timestamp"
        ],
        "title": "ThreadNotificationResponse",
        "description": "Aggregated message notifications for a chat thread."
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "user_type": {
            "$ref": "#/components/schemas/UserType"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone_number",
          "user_type",
          "password"
        ],
        "title": "UserCreate"
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number"
          },
          "user_type": {
            "$ref": "#/components/schemas/UserType"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "mfa_enabled": {
            "type": "boolean",
            "title": "Mfa Enabled"
          },
          "profile_picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture Url"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone_number",
          "user_type",
          "id",
          "is_active",
          "is_verified",
          "mfa_enabled"
        ],
        "title": "UserResponse"
      },
      "UserType": {
        "type": "string",
        "enum": [
          "artist",
          "client"
        ],
        "title": "UserType"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__schemas__quote_v2__QuoteCreate": {
        "properties": {
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          },
          "artist_id": {
            "type": "integer",
            "title": "Artist Id"
          },
          "client_id": {
            "type": "integer",
            "title": "Client Id"
          },
          "services": {
            "items": {
              "$ref": "#/components/schemas/ServiceItem-Input"
            },
            "type": "array",
            "title": "Services"
          },
          "sound_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Sound Fee",
            "default": 0
          },
          "travel_fee": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Travel Fee",
            "default": 0
          },
          "accommodation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation"
          },
          "discount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "booking_request_id",
          "artist_id",
          "client_id",
          "services"
        ],
        "title": "QuoteCreate"
      },
      "app__schemas__request_quote__QuoteCreate": {
        "properties": {
          "quote_details": {
            "type": "string",
            "title": "Quote Details"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "ZAR"
          },
          "valid_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Until"
          },
          "booking_request_id": {
            "type": "integer",
            "title": "Booking Request Id"
          }
        },
        "type": "object",
        "required": [
          "quote_details",
          "price",
          "booking_request_id"
        ],
        "title": "QuoteCreate"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/auth/login"
          }
        }
      }
    }
  }
}